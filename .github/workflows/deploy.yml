name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Given permission
        run: chmod +x gradlew
        
      - name: Build JAR file with Gradle
        run: ./gradlew clean build -x test


      - name: Log in to AWS ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}

          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: us-east-1
          AWS_ECR_URI: ${{ secrets.AWS_ECR_URI }}
        run: |
          echo "Using environment: tes"
          echo "AWS_ACCESS_KEY_ID length: ${#AWS_ACCESS_KEY_ID}"
          echo "AWS_SECRET_ACCESS_KEY length: ${#AWS_SECRET_ACCESS_KEY}"
          echo "AWS_ECR_URI: $AWS_ECR_URI"
          if [ -z "$AWS_ACCESS_KEY_ID" ] || [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
            echo "AWS credentials are missing. Check GitHub Secrets in the tes environment."
            exit 1
          fi
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ECR_URI

      - name: Build & Push Docker Image to ECR
        run: |
          docker build -t my-app .
          docker tag my-app:latest ${{ secrets.AWS_ECR_URI }}/my-app:latest
          docker push ${{ secrets.AWS_ECR_URI }}/my-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: tes

    steps:
      - name: Connect to EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.AWS_ECR_URI }}/my-app:latest
            sudo docker stop my-app || true
            sudo docker rm my-app || true
            sudo docker run -d -p 80:8080 --name my-app ${{ secrets.AWS_ECR_URI }}/my-app:latest
